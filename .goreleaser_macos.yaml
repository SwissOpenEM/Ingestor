# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj


# Test with `goreleaser --snapshot --clean`
# To release, create a tag and push it to Github: `git tag -a v0.1.0 -m "First release" && git push origin v0.1.0`. GoReleaser enforces semantic versioning and will error on non-compliant tags.
# For it to work, you need to have the `GITHUB_TOKEN` environment variable set export GITHUB_TOKEN="YOUR_GH_TOKEN". The minimum permissions the GITHUB_TOKEN should have to run this are write:packages

# Now you can run GoReleaser at the root of your repository: `goreleaser release`
# For dry run, see https://goreleaser.com/quick-start/#dry-run

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  # The app build is invoked via wails and binary copied manually to the expected output folder
  - id: "openem-ingestor-app"
    hooks:
        pre:
        - cmd: mkdir -p {{dir .Path}}
        post:
        - dir: cmd/openem-ingestor-app
          cmd: "wails build -platform {{ .Os }} -clean -ldflags \"-s -w  -X 'main.version={{.Version}}'\" -trimpath -o {{base .Path}}"
          output: true
        - dir: cmd/openem-ingestor-app
          cmd: cp build/bin/openem-ingestor-app.app/Contents/MacOS/{{base .Path}} {{dir .Path}}/
          output: true
    env:
      - CGO_ENABLED=0
    dir: ./cmd/openem-ingestor-app
    goos:
      - darwin
    goarch:
      - amd64
    main: .
    binary: openem-ingestor-app
    tool: echo 

archives:
  - id: "openem-ingestor-app"
    builds: 
      - openem-ingestor-app
    format: tar.gz

    wrap_in_directory: true
    name_template: >-
      {{ .ProjectName }}_app_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    files:
    - src: configs/ReadMe.md
      dst: ./ReadMe.md
    - src: configs/*.yaml
      dst: ./
    - src: configs/schemas/*.json
      dst: schemas

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
checksum:
  name_template: "{{ .ProjectName }}_Darwin_checksums.txt"
release:
  prerelease: auto