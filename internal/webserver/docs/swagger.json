{
    "swagger": "2.0",
    "info": {
        "contact": {
            "name": "SwissOpenEM",
            "url": "https://swissopenem.github.io",
            "email": "spencer.bliven@psi.ch"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "paths": {
        "/callback": {
            "get": {
                "description": "For handling the authorization code received from the OIDC provider",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "authentication"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "OAuth2 authorization code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OAuth2 state param",
                        "name": "state",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "goes to '/'"
                            }
                        }
                    },
                    "400": {
                        "description": "request error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/datasets": {
            "post": {
                "description": "Ingest a new dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "json      text/plain"
                ],
                "tags": [
                    "datasets"
                ],
                "parameters": [
                    {
                        "description": "mainly contains the dataset metadata",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webserver.DatasetControllerIngestDatasetRequestObject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webserver.DatasetControllerIngestDataset200JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Ends user session by deleting the session cookie.",
                "tags": [
                    "authentication"
                ],
                "responses": {
                    "302": {
                        "description": "Found",
                        "headers": {
                            "Location": {
                                "type": "string",
                                "description": "goes to '/'"
                            }
                        }
                    },
                    "500": {
                        "description": "can't delete cookie",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transfer": {
            "get": {
                "description": "\"Get list of transfers. Optional use the transferId parameter to only get one item.\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfer"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page of transfers",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "number of elements per page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "get specific transfer by id",
                        "name": "transferId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "returns the list of transfers",
                        "schema": {
                            "$ref": "#/definitions/webserver.TransferControllerGetTransfer200JSONResponse"
                        }
                    },
                    "400": {
                        "description": "the request is invalid",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Cancel a data transfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfer"
                ],
                "parameters": [
                    {
                        "description": "it contains the id to cancel",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webserver.TransferControllerDeleteTransferRequestObject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webserver.TransferControllerDeleteTransfer200JSONResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Get the used ingestor version",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "other"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/webserver.OtherControllerGetVersion200JSONResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "webserver.DatasetControllerIngestDataset200JSONResponse": {
            "type": "object",
            "properties": {
                "ingestId": {
                    "description": "IngestId The unique ingestion id of the dataset.",
                    "type": "string"
                },
                "status": {
                    "description": "Status The status of the ingestion. Can be used to send a message back to the ui.",
                    "type": "string"
                }
            }
        },
        "webserver.DatasetControllerIngestDatasetJSONRequestBody": {
            "type": "object",
            "properties": {
                "metaData": {
                    "description": "MetaData The metadata of the dataset.",
                    "type": "string"
                }
            }
        },
        "webserver.DatasetControllerIngestDatasetRequestObject": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/webserver.DatasetControllerIngestDatasetJSONRequestBody"
                }
            }
        },
        "webserver.IngestorUiGetTransferItem": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "transferId": {
                    "type": "string"
                }
            }
        },
        "webserver.OtherControllerGetVersion200JSONResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "description": "Version Version of the ingestor.",
                    "type": "string"
                }
            }
        },
        "webserver.TransferControllerDeleteTransfer200JSONResponse": {
            "type": "object",
            "properties": {
                "ingestId": {
                    "description": "IngestId Ingestion id to abort the ingestion",
                    "type": "string"
                },
                "status": {
                    "description": "Status New status of the ingestion.",
                    "type": "string"
                }
            }
        },
        "webserver.TransferControllerDeleteTransferJSONRequestBody": {
            "type": "object",
            "properties": {
                "ingestId": {
                    "description": "IngestId Ingestion id to abort the ingestion",
                    "type": "string"
                }
            }
        },
        "webserver.TransferControllerDeleteTransferRequestObject": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/webserver.TransferControllerDeleteTransferJSONRequestBody"
                }
            }
        },
        "webserver.TransferControllerGetTransfer200JSONResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "description": "Total Total number of transfers.",
                    "type": "integer"
                },
                "transfers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/webserver.IngestorUiGetTransferItem"
                    }
                }
            }
        }
    }
}